{"version":3,"sources":["components/section/section.component.tsx","components/image-overlay-container/image-overlay-container.component.tsx","components/top-banner/top-banner.component.tsx","redux/movie/movie.action.ts","redux/movie/movie.selector.ts","components/section-header/section-header.component.tsx","components/movie-card/movie-card.component.tsx","components/custom-spinner/custom-spinner.component.tsx","components/storefront/storefront.component.tsx","components/popular/popular.component.tsx","components/top-rated/top-rated.component.tsx","components/now-playing/now-playing.component.tsx","pages/home-page/home-page.component.tsx","components/custom-input/custom-input.component.tsx","components/custom-button/custom-button.component.tsx","components/search-form/search-form.component.tsx","components/navbar/navbar.component.tsx","components/footer/footer.component.tsx","components/main-layout/main-layout.component.tsx","components/movie-poster/movie-poster.component.tsx","pages/movie-details-page/movie-details-page.component.tsx","App.tsx","pages/search-result/search-result-page.component.tsx","serviceWorker.ts","redux/movie/movie.reducer.ts","redux/root.reducer.ts","redux/store.ts","index.tsx","assets/images/banner.jpg"],"names":["Section","className","children","fluid","dark","Container","ImageOverlayContainer","backgroundSrc","src","alt","TopBanner","require","apiUrl","process","apiKey","selectMovieState","state","movie","selectPopularMovieFetchingStatus","createSelector","popular","isFetching","selectPopularMovies","data","selectTopRatedMovieFetchingStatus","topRated","selectTopRatedMovies","selectNowPlayingMovieFetchingStatus","nowPlaying","selectNowPlayingMovies","SectionHeader","MovieCard","props","to","id","poster_path","release_date","vote_average","title","length","substring","CustomSpinner","Spinner","animation","role","Storefront","movieData","map","key","Popular","dispatch","useDispatch","useSelector","useEffect","type","Axios","get","then","res","payload","results","TopRated","NowPlaying","HomePage","Helmet","CustomInput","placeholder","FormControl","CustomButton","isLoading","Button","SearchForm","history","useHistory","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","push","value","onChange","target","variant","NavbarComponent","Navbar","fixed","expand","Row","Col","xs","Brand","Footer","MainLayout","MoviePoster","MovieDetailsPage","movieDetails","setMovieDetails","credits","setCredits","setLoading","useParams","a","fetchData","split","lg","md","crew","filter","c","department","name","join","genres","genre","tagline","overview","modules","Component","url","searchResults","setSearchResults","currentPage","setCurrentPage","loadMore","newPage","result","onClick","App","unlisten","listen","window","scrollTo","exact","path","mod","i","component","Boolean","location","hostname","match","INIT_STATE","movieReducer","action","rootReducer","combineReducers","middlewares","thunk","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.e6c79a3a.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\nimport { Container } from \"react-bootstrap\";\n\ninterface Props {\n  className?: string;\n  children: ReactNode;\n  fluid?: boolean;\n  dark?: boolean;\n}\n\nconst Section: React.FC<Props> = ({ className, children, fluid, dark = false }) => {\n  return (\n    <section className={`${className} ${dark && `bg-tertiary`}`}>\n      <Container fluid={fluid} className={`${fluid && \"px-0\"}`}>\n        {children}\n      </Container>\n    </section>\n  );\n};\n\nexport default Section;\n","import React, { ReactNode } from \"react\";\n\nimport \"./image-overlay-container.style.scss\";\n\ninterface Props {\n  children: ReactNode;\n  backgroundSrc: string;\n  className?: string;\n}\n\nconst ImageOverlayContainer: React.FC<Props> = ({ className, children, backgroundSrc }) => {\n  return (\n    <div className=\"imageOverlayContainer\">\n      <img className=\"imageOverlayContainer__background\" src={backgroundSrc} alt=\"\" />\n      <div className=\"imageOverlayContainer__colorOverlay\" />\n      <div className={`imageOverlayContainer__mainContent ${className ? className : \"\"}`}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageOverlayContainer;\n","import React from \"react\";\n\nimport Section from \"../section\";\nimport ImageOverlayContainer from \"../image-overlay-container\";\n\nimport \"./top-banner.style.scss\";\n\nconst TopBanner: React.FC = () => {\n  return (\n    <Section className=\"topBanner\">\n      <ImageOverlayContainer\n        className=\"topBanner__banner\"\n        backgroundSrc={require(\"../../assets/images/banner.jpg\")}\n      >\n        <span className=\"topBanner__title\">Welcome</span>\n        <span className=\"topBanner__title topBanner__title--subtitle\">\n          Your one stop movie index\n        </span>\n      </ImageOverlayContainer>\n    </Section>\n  );\n};\n\nexport default TopBanner;\n","import { Dispatch } from \"redux\";\nimport Axios from \"axios\";\n\nimport { MovieStateActionTypes } from \"./movie\";\n\nexport const apiUrl = process.env.REACT_APP_API_URL;\nexport const apiKey = process.env.REACT_APP_API_KEY;\n\nconst fetchPopularMovieStart = (): MovieStateActionTypes => ({\n  type: \"MOVIE_POPULAR_FETCH_START\",\n});\n\nconst fetchTopRatedMovieStart = (): MovieStateActionTypes => ({\n  type: \"MOVIE_TOPRATED_FETCH_START\",\n});\n\nconst fetchNowPlayingMovieStart = (): MovieStateActionTypes => ({\n  type: \"MOVIE_NOW_PLAYING_FETCH_START\",\n});\n\nconst fetchPopularMovieSuccess = (data: any): MovieStateActionTypes => ({\n  type: \"MOVIE_POPULAR_FETCH_SUCCESS\",\n  payload: data,\n});\n\nconst fetchTopRatedMovieSuccess = (data: any): MovieStateActionTypes => ({\n  type: \"MOVIE_TOPRATED_FETCH_SUCCESS\",\n  payload: data,\n});\n\nconst fetchNowPlayingMovieSuccess = (data: any): MovieStateActionTypes => ({\n  type: \"MOVIE_NOW_PLAYING_FETCH_SUCCESS\",\n  payload: data,\n});\n\nexport const fetchPopularMovieStartAsync = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchPopularMovieStart());\n    Axios.get(`${apiUrl}/movie/popular${apiKey}`).then((res) =>\n      dispatch(fetchPopularMovieSuccess(res.data.results))\n    );\n  };\n};\n\nexport const fetchTopRatedMovieStartAsync = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchTopRatedMovieStart());\n    Axios.get(`${apiUrl}/movie/top_rated${apiKey}`).then((res) =>\n      dispatch(fetchTopRatedMovieSuccess(res.data.results))\n    );\n  };\n};\n\nexport const fetchNowPlayingMovieStartAsync = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchNowPlayingMovieStart());\n    Axios.get(`${apiUrl}/movie/now_playing${apiKey}`).then((res) =>\n      dispatch(fetchNowPlayingMovieSuccess(res.data.results))\n    );\n  };\n};\n","import { RootState } from \"../root.reducer\";\nimport { createSelector } from \"reselect\";\nimport { MovieState } from \"./movie\";\n\nconst selectMovieState = (state: RootState): MovieState => state.movie;\n\nexport const selectPopularMovieFetchingStatus = createSelector(\n  [selectMovieState],\n  (state) => state.popular.isFetching\n);\n\nexport const selectPopularMovies = createSelector(\n  [selectMovieState],\n  (state) => state.popular.data\n);\n\nexport const selectTopRatedMovieFetchingStatus = createSelector(\n  [selectMovieState],\n  (state) => state.topRated.isFetching\n);\n\nexport const selectTopRatedMovies = createSelector(\n  [selectMovieState],\n  (state) => state.topRated.data\n);\n\nexport const selectNowPlayingMovieFetchingStatus = createSelector(\n  [selectMovieState],\n  (state) => state.nowPlaying.isFetching\n);\n\nexport const selectNowPlayingMovies = createSelector(\n  [selectMovieState],\n  (state) => state.nowPlaying.data\n);\n","import React, { ReactNode } from \"react\";\n\nimport \"./section-header.style.scss\";\n\ninterface Props {\n  children: ReactNode;\n  dark?: boolean;\n}\n\nconst SectionHeader: React.FC<Props> = ({ children, dark = false }) => {\n  return <span className={`sectionHeader ${dark && \"sectionHeader--dark\"}`}>{children}</span>;\n};\n\nexport default SectionHeader;\n","import React from \"react\";\nimport { HiThumbUp } from \"react-icons/hi\";\n\nimport { MovieObject } from \"../../redux/movie/movie\";\n\nimport \"./movie-card.style.scss\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props extends MovieObject {\n  dark?: boolean;\n}\n\nconst MovieCard: React.FC<Props> = ({ dark, ...props }) => {\n  const imageUrl = process.env.REACT_APP_API_IMAGE_URL;\n  const titleMaxLength = 25;\n  return (\n    <Link to={`/details/${props.id}`} className={`movieCard ${dark ? \"movieCard--dark\" : \"\"}`}>\n      <div className=\"movieCard__posterContainer\">\n        <img\n          className=\"movieCard__poster\"\n          src={\n            props.poster_path\n              ? imageUrl + props.poster_path\n              : \"https://via.placeholder.com/600x900.png?text=Image%20Unavailable\"\n          }\n          alt=\"\"\n        />\n        <div className=\"movieCard__pill\">\n          <div className=\"movieCard__pillInner movieCard__pillInner--date\">\n            {props.release_date}\n          </div>\n          <div className=\"movieCard__pillInner movieCard__pillInner--rating\">\n            <HiThumbUp className=\"movieCard__thumbIcon\" />\n            {props.vote_average}\n          </div>\n        </div>\n      </div>\n      <div className=\"movieCard__description\">\n        <span className=\"movieCard__title\">\n          {props.title.length > titleMaxLength\n            ? `${props.title.substring(0, titleMaxLength)}...`\n            : props.title}\n        </span>\n      </div>\n    </Link>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nimport \"./custom-spinner.style.scss\";\n\nconst CustomSpinner: React.FC = () => {\n  return (\n    <div className=\"customSpinner\">\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n};\n\nexport default CustomSpinner;\n","import React from \"react\";\n\nimport MovieCard from \"../movie-card\";\n\nimport \"./storefront.style.scss\";\nimport CustomSpinner from \"../custom-spinner\";\nimport { MovieObject } from \"../../redux/movie/movie\";\n\ninterface Props {\n  isFetching: boolean;\n  movieData: MovieObject[];\n  dark?: boolean;\n}\n\nconst Storefront: React.FC<Props> = ({ isFetching, movieData, dark = false }) => {\n  return (\n    <div className=\"storefront\">\n      {isFetching ? (\n        <CustomSpinner />\n      ) : (\n        movieData.map((movie) => <MovieCard dark={dark} key={movie.id} {...movie} />)\n      )}\n    </div>\n  );\n};\n\nexport default Storefront;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchPopularMovieStartAsync } from \"../../redux/movie/movie.action\";\nimport {\n  selectPopularMovieFetchingStatus,\n  selectPopularMovies,\n} from \"../../redux/movie/movie.selector\";\n\nimport SectionHeader from \"../section-header\";\nimport Section from \"../section\";\nimport Storefront from \"../storefront\";\n\nimport \"./popular.style.scss\";\n\nconst Popular: React.FC = () => {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(selectPopularMovieFetchingStatus);\n  const movieData = useSelector(selectPopularMovies);\n\n  useEffect(() => {\n    dispatch(fetchPopularMovieStartAsync());\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Section className=\"popular\">\n      <SectionHeader>Popular</SectionHeader>\n      <Storefront movieData={movieData} isFetching={isFetching} />\n    </Section>\n  );\n};\n\nexport default Popular;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchTopRatedMovieStartAsync } from \"../../redux/movie/movie.action\";\nimport {\n  selectTopRatedMovies,\n  selectTopRatedMovieFetchingStatus,\n} from \"../../redux/movie/movie.selector\";\n\nimport Section from \"../section\";\nimport SectionHeader from \"../section-header\";\nimport Storefront from \"../storefront\";\n\nimport \"./top-rated.style.scss\";\n\nconst TopRated: React.FC = () => {\n  const dispatch = useDispatch();\n  const movieData = useSelector(selectTopRatedMovies);\n  const isFetching = useSelector(selectTopRatedMovieFetchingStatus);\n  useEffect(() => {\n    dispatch(fetchTopRatedMovieStartAsync());\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <Section dark className=\"topRated\">\n      <SectionHeader dark>Top Rated</SectionHeader>\n      <Storefront dark movieData={movieData} isFetching={isFetching} />\n    </Section>\n  );\n};\n\nexport default TopRated;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  fetchNowPlayingMovieStartAsync,\n} from \"../../redux/movie/movie.action\";\nimport {\n  selectNowPlayingMovieFetchingStatus,\n  selectNowPlayingMovies,\n} from \"../../redux/movie/movie.selector\";\n\nimport SectionHeader from \"../section-header\";\nimport Section from \"../section\";\nimport Storefront from \"../storefront\";\n\nimport \"./now-playing.style.scss\";\n\nconst NowPlaying: React.FC = () => {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(selectNowPlayingMovieFetchingStatus);\n  const movieData = useSelector(selectNowPlayingMovies);\n\n  useEffect(() => {\n    dispatch(fetchNowPlayingMovieStartAsync());\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Section className=\"nowPlaying\">\n      <SectionHeader>Now Playing</SectionHeader>\n      <Storefront movieData={movieData} isFetching={isFetching} />\n    </Section>\n  );\n};\n\nexport default NowPlaying;\n","import React, { Fragment } from \"react\";\n\nimport TopBanner from \"../../components/top-banner\";\nimport Popular from \"../../components/popular\";\nimport TopRated from \"../../components/top-rated\";\nimport NowPlaying from \"../../components/now-playing\";\nimport { Helmet } from \"react-helmet\";\n\nconst HomePage: React.FC = () => {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Home &ndash; MoviePedia</title>\n      </Helmet>\n      <TopBanner />\n      <Popular />\n      <TopRated />\n      <NowPlaying />\n    </Fragment>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { FormControl } from \"react-bootstrap\";\nimport { FormControlProps } from \"react-bootstrap\";\n\nimport \"./custom-input.style.scss\";\n\ninterface Props extends FormControlProps {\n  placeholder?: string;\n}\n\nconst CustomInput: React.FC<Props> = ({ placeholder, className, ...props }) => {\n  return (\n    <FormControl\n      placeholder={placeholder}\n      className={`customInput ${className ? className : \"\"}`}\n      {...props}\n    />\n  );\n};\n\nexport default CustomInput;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { ButtonProps } from \"react-bootstrap\";\n\nimport \"./custom-button.style.scss\";\n\ninterface Props extends ButtonProps {\n  isLoading?: boolean;\n}\n\nconst CustomButton: React.FC<Props> = ({ isLoading, className, ...props }) => {\n  const { children } = props;\n  return (\n    <Button className={`customButton ${className}`} {...props}>\n      {children}\n    </Button>\n  );\n};\n\nexport default CustomButton;\n","import React, { useState, FormEvent } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { FaSearch } from \"react-icons/fa\";\n\nimport CustomInput from \"../custom-input\";\nimport CustomButton from \"../custom-button\";\n\nimport \"./search-form.style.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SearchForm: React.FC = () => {\n  const history = useHistory();\n  const [keyword, setKeyword] = useState<string>(\"\");\n  const handleSearch = (e: FormEvent) => {\n    e.preventDefault();\n    history.push(`/search/${keyword}`);\n  };\n  return (\n    <Form className=\"searchForm\" onSubmit={handleSearch}>\n      <CustomInput\n        value={keyword}\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder=\"Search Here\"\n      />\n      <CustomButton type=\"submit\" variant=\"secondary\" className=\"searchForm__button\">\n        <FaSearch />\n      </CustomButton>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport { Navbar, Container, Row, Col } from \"react-bootstrap\";\n\nimport \"./navbar.style.scss\";\nimport { Link } from \"react-router-dom\";\nimport SearchForm from \"../search-form\";\n\nconst NavbarComponent: React.FC = () => {\n  return (\n    <Navbar fixed=\"top\" className=\"navbarComponent\" expand=\"lg\">\n      <Container>\n        <Row className='navbarComponent__inner'>\n          <Col xs={4}>\n            <Navbar.Brand>\n              <Link to=\"/\">\n                <strong className=\"navbarComponent__title\">MoviePedia</strong>\n              </Link>\n            </Navbar.Brand>\n          </Col>\n          <Col xs={8}>\n            <SearchForm />\n          </Col>\n        </Row>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavbarComponent;\n","import React from \"react\";\n\nimport \"./footer.style.scss\";\nconst Footer: React.FC = () => {\n  return <div className=\"footer\">&copy; 2020. Bintang Kevin Hizkia Samosir.</div>;\n};\n\nexport default Footer;\n","import React, { ReactNode } from \"react\";\nimport NavbarComponent from \"../navbar\";\nimport Footer from \"../footer\";\n\nimport \"./main-layout.style.scss\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nconst MainLayout: React.FC<Props> = ({ children }) => {\n  return (\n    <div className=\"mainLayout\">\n      <NavbarComponent />\n      {children}\n      <Footer />\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React from \"react\";\n\nimport \"./movie-poster.style.scss\";\n\ninterface Props {\n  src?: string;\n  className?: string;\n}\n\nconst MoviePoster: React.FC<Props> = ({ src, className }) => {\n  const imageUrl = process.env.REACT_APP_API_IMAGE_URL;\n\n  return (\n    <img\n      className={`moviePoster ${className}`}\n      alt=\"\"\n      src={\n        src ? imageUrl + src : \"https://via.placeholder.com/600x900.png?text=Image%20Unavailable\"\n      }\n    ></img>\n  );\n};\n\nexport default MoviePoster;\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport Section from \"../../components/section\";\nimport SectionHeader from \"../../components/section-header\";\nimport Axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\nimport { MovieCredits, MovieDetails } from \"../../redux/movie/movie\";\nimport { apiKey, apiUrl } from \"../../redux/movie/movie.action\";\n\nimport CustomSpinner from \"../../components/custom-spinner\";\nimport MoviePoster from \"../../components/movie-poster\";\n\nimport \"./movie-details-page.style.scss\";\nimport { HiThumbUp } from \"react-icons/hi\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet\";\n\nconst MovieDetailsPage: React.FC = () => {\n  const [movieDetails, setMovieDetails] = useState<MovieDetails>();\n  const [credits, setCredits] = useState<MovieCredits>();\n  const [isLoading, setLoading] = useState<boolean>(true);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await Axios.get(`${apiUrl}/movie/${id}${apiKey}`).then((res) => {\n        setMovieDetails(res.data);\n      });\n      await Axios.get(`${apiUrl}/movie/${id}/credits${apiKey}`).then((res) => {\n        setCredits(res.data);\n      });\n      setLoading(false);\n    };\n    fetchData();\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Section className=\"movieDetailsPage\">\n      <Helmet>\n        <title>{isLoading ? \"Loading...\" : movieDetails?.title} &ndash; MoviePedia</title>\n      </Helmet>\n      {isLoading ? (\n        <CustomSpinner />\n      ) : (\n        <Fragment>\n          <SectionHeader>\n            {`${movieDetails?.title} (${movieDetails?.release_date.split(\"-\")[0]})`}\n          </SectionHeader>\n          <Row className=\"movieDetailsPage__mainContent\">\n            <Col lg={5} xs={12} md={12} className=\"movieDetailsPage__posterContainer\">\n              <MoviePoster className=\"movieDetailsPage__poster\" src={movieDetails?.poster_path} />\n            </Col>\n            <Col className=\"movieDetailsPage__detailsContainer\" lg={7} md={12}>\n              <div className=\"movieDetailsPage__details\">\n                <table className=\"movieDetailsPage__detailTable\">\n                  <tbody>\n                    <tr>\n                      <td className=\"movieDetailsPage__itemName\">Director(s)</td>\n                      <td className=\"movieDetailsPage__itemDescription\">\n                        {credits?.crew\n                          .filter((c) => c.department === \"Directing\")\n                          .map((c) => c.name)\n                          .join(\", \")}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"movieDetailsPage__itemName\">Writer(s)</td>\n                      <td className=\"movieDetailsPage__itemDescription\">\n                        {credits?.crew\n                          .filter((c) => c.department === \"Writing\")\n                          .map((c) => c.name)\n                          .join(\", \")}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"movieDetailsPage__itemName\">Genre</td>\n                      <td className=\"movieDetailsPage__itemDescription\">\n                        {movieDetails?.genres.map((genre) => genre.name).join(\", \")}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"movieDetailsPage__itemName\">Release Date</td>\n                      <td className=\"movieDetailsPage__itemDescription\">\n                        {movieDetails?.release_date}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n                <span className=\"movieDetailsPage__tagline\">{movieDetails?.tagline}</span>\n                <span className=\"movieDetailsPage__synopsis\">{movieDetails?.overview}</span>\n                <div className=\"movieDetailsPage__score\">\n                  <HiThumbUp />{\" \"}\n                  <span className=\"movieDetailsPage__scoreDetails\">\n                    {movieDetails?.vote_average}\n                  </span>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Fragment>\n      )}\n    </Section>\n  );\n};\n\nexport default MovieDetailsPage;\n","import React, { useEffect } from \"react\";\n\nimport HomePage from \"./pages/home-page\";\nimport MainLayout from \"./components/main-layout\";\n\nimport \"./styles/global.scss\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport MovieDetailsPage from \"./pages/movie-details-page\";\nimport SearchResultPage from \"./pages/search-result\";\n\nconst modules = [\n  {\n    name: \"Home Page\",\n    Component: HomePage,\n    url: \"/\",\n  },\n  {\n    name: \"Movie Details\",\n    Component: MovieDetailsPage,\n    url: \"/details/:id\",\n  },\n  {\n    name: \"Search Result\",\n    Component: SearchResultPage,\n    url: \"/search/:keyword\",\n  },\n];\n\nconst App = () => {\n  const history = useHistory();\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Route exact path={modules.map((mod) => mod.url)}>\n      <MainLayout>\n        {modules.map((mod, i) => (\n          <Route key={i} exact path={mod.url} component={mod.Component} />\n        ))}\n      </MainLayout>\n    </Route>\n  );\n};\n\nexport default App;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport Section from \"../../components/section\";\nimport SectionHeader from \"../../components/section-header\";\nimport { useParams } from \"react-router-dom\";\n\nimport \"./search-result-page.style.scss\";\nimport { MovieObject } from \"../../redux/movie/movie\";\nimport Axios from \"axios\";\nimport { apiUrl, apiKey } from \"../../redux/movie/movie.action\";\nimport CustomSpinner from \"../../components/custom-spinner\";\nimport MovieCard from \"../../components/movie-card\";\nimport { FaChevronDown } from \"react-icons/fa\";\nimport { Helmet } from \"react-helmet\";\n\nconst SearchResultPage: React.FC = () => {\n  const { keyword } = useParams();\n\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const [searchResults, setSearchResults] = useState<MovieObject[]>();\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      await Axios.get(`${apiUrl}/search/movie${apiKey}&page=${currentPage}&query=${keyword}`).then(\n        (res) => {\n          setSearchResults(res.data.results);\n        }\n      );\n      setLoading(false);\n    };\n    fetchData();\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyword]);\n\n  const loadMore = async () => {\n    const newPage = currentPage + 1;\n    setLoading(true);\n\n    await Axios.get(`${apiUrl}/search/movie${apiKey}&page=${newPage}&query=${keyword}`).then(\n      (res) => {\n        setSearchResults([...searchResults, ...res.data.results]);\n        setCurrentPage(newPage);\n        setLoading(false);\n      }\n    );\n  };\n\n  return (\n    <Section className=\"searchResultPage\">\n      <Helmet>\n        <title>Search result for {keyword} &ndash; MoviePedia</title>\n      </Helmet>\n      <SectionHeader>Search Result For \"{keyword}\"</SectionHeader>\n      <div className=\"searchResultPage__results\">\n        {isLoading && !searchResults ? (\n          <CustomSpinner />\n        ) : (\n          <Fragment>\n            {searchResults?.map((result) => (\n              <MovieCard {...result} />\n            ))}\n            <div className=\"searchResultPage__fetchMore\">\n              {isLoading ? (\n                <CustomSpinner />\n              ) : (\n                <div className=\"searchResultPage__fetchButton\" onClick={loadMore}>\n                  Load More\n                  <FaChevronDown />\n                </div>\n              )}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Section>\n  );\n};\n\nexport default SearchResultPage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { MovieState, MovieStateActionTypes } from \"./movie\";\n\nconst INIT_STATE: MovieState = {\n  popular: {\n    data: [],\n    isFetching: false,\n  },\n  topRated: {\n    data: [],\n    isFetching: false,\n  },\n  nowPlaying: {\n    data: [],\n    isFetching: false,\n  },\n};\n\nconst movieReducer = (state = INIT_STATE, action: MovieStateActionTypes): MovieState => {\n  switch (action.type) {\n    case \"MOVIE_POPULAR_FETCH_START\":\n      return {\n        ...state,\n        popular: {\n          ...state.popular,\n          isFetching: true,\n        },\n      };\n    case \"MOVIE_TOPRATED_FETCH_START\":\n      return {\n        ...state,\n        topRated: {\n          ...state.topRated,\n          isFetching: true,\n        },\n      };\n    case \"MOVIE_NOW_PLAYING_FETCH_START\":\n      return {\n        ...state,\n        nowPlaying: {\n          ...state.nowPlaying,\n          isFetching: true,\n        },\n      };\n    case \"MOVIE_POPULAR_FETCH_SUCCESS\":\n      return {\n        ...state,\n        popular: {\n          data: action.payload,\n          isFetching: false,\n        },\n      };\n    case \"MOVIE_TOPRATED_FETCH_SUCCESS\":\n      return {\n        ...state,\n        topRated: {\n          data: action.payload,\n          isFetching: false,\n        },\n      };\n    case \"MOVIE_NOW_PLAYING_FETCH_SUCCESS\":\n      return {\n        ...state,\n        nowPlaying: {\n          data: action.payload,\n          isFetching: false,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default movieReducer;\n","import { combineReducers } from \"redux\";\n\nimport movieReducer from \"./movie/movie.reducer\";\n\nconst rootReducer = combineReducers({\n  movie: movieReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport Redux, { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./root.reducer\";\n\nconst middlewares: Redux.Middleware[] = [thunk];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/banner.4f567b68.jpg\";"],"sourceRoot":""}